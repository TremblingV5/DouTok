syntax = "proto3";
package relationDomain;
option go_package = "relationDomain";

import "entity.proto";

message doutok_add_relation_request {
    int64 user_id = 1; // 用户id
    int64 to_user_id = 2; // 对方用户id
}

message doutok_add_relation_response {
    int32 status_code = 1;
    string status_msg = 2;
}

message doutok_rm_relation_request {
    int64 user_id = 1; // 用户id
    int64 to_user_id = 2; // 对方用户id
}

message doutok_rm_relation_response {
    int32 status_code = 1;
    string status_msg = 2;
}

message doutok_list_relation_request {
    int64 user_id = 1; // 用户id
    int64 action_type = 2; // 请求类型，0对应粉丝列表，1对应关注列表，2对应朋友列表
}

message doutok_list_relation_response {
    int32 status_code = 1;
    string status_msg = 2;
    repeated entity.User user_list = 3; // 用户列表
}

message doutok_count_relation_request {
    repeated int64 user_id = 1; // 用户id
    int64 action_type = 2; // 请求类型：0对应粉丝数，1对应关注数，2对应朋友数
}

message doutok_count_relation_response {
    int32 status_code = 1;
    string status_msg = 2;
    map<int64, int64> result = 3;
}

service RelationDomainService {
    rpc AddRelation(doutok_add_relation_request) returns (doutok_add_relation_response);
    rpc RmRelation(doutok_rm_relation_request) returns (doutok_rm_relation_response);
    rpc ListRelation(doutok_list_relation_request) returns (doutok_list_relation_response);
    rpc CountRelation(doutok_count_relation_request) returns (doutok_count_relation_response);
}
