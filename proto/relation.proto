syntax = "proto3";
package relation;
option go_package = "relation";

import "entity.proto";

message douyin_relation_action_request {
    int64 user_id = 1; // 用户id
    int64 to_user_id = 2; // 对方用户id
    int32 action_type = 3; // 1-关注，2-取消关注
}

message douyin_relation_action_response {
    int32 status_code = 1;
    string status_msg = 2;
}

message douyin_relation_follow_list_request {
    int64 user_id = 1; // 用户id
}

message douyin_relation_follow_list_response {
    int32 status_code = 1;
    string status_msg = 2;
    repeated entity.User user_list = 3; // 用户信息列表
}

message douyin_relation_follower_list_request {
    int64 user_id = 1; // 用户id
}

message douyin_relation_follower_list_response {
    int32 status_code = 1;
    string status_msg = 2;
    repeated entity.User user_list = 3; // 用户列表
}

message douyin_relation_friend_list_request {
    int64 user_id = 1; // 用户id
}

message douyin_relation_friend_list_response {
    int32 status_code = 1;
    string status_msg = 2;
    repeated entity.FriendUser user_list = 3; // 用户列表
}

message douyin_relation_count_request {
    int64 user_id = 1;
}

message douyin_relation_count_response {
    int32 status_code = 1;
    string status_msg = 2;
    int64 follow_count = 3;     // 关注数
    int64 follower_count = 4;   // 粉丝数
}

service RelationService{
    rpc RelationAction(douyin_relation_action_request) returns (douyin_relation_action_response); //关注或取消关注
    rpc RelationFollowList(douyin_relation_follow_list_request) returns (douyin_relation_follow_list_response); //获取已关注用户的列表
    rpc RelationFollowerList(douyin_relation_follower_list_request) returns (douyin_relation_follower_list_response); //获取粉丝用户列表
    rpc RelationFriendList(douyin_relation_friend_list_request) returns (douyin_relation_friend_list_response); //获取粉丝用户列表
    // rpc GetFollowCount(douyin_relation_count_request) returns (douyin_relation_count_response); // 查询一个user的关注数和粉丝数
}