syntax = "proto3";
package videoDomain;
option go_package = "videoDomain";

import "entity.proto";

message doutok_get_feed_request {
    int64 latest_time = 1; // 可选参数，限制返回视频的最新投稿时间戳，精确到秒，不填表示当前时间
    int64 user_id = 2; // 请求feed流的用户id，若没有则置为0
}

message doutok_get_feed_response {
    int32 status_code = 1;
    string status_msg = 2;
    repeated entity.Video video_list = 3;
    int64 next_time = 4;
}

message doutok_add_publish_request {
    bytes data = 1;
    string title = 2;
    int64 user_id = 3;
    string name = 4;
}

message doutok_add_publish_response {
    int32 status_code = 1;
    string status_msg = 2;
}

message doutok_list_publish_request {
    int64 user_id = 1;
}

message doutok_list_publish_response {
    int32 status_code = 1;
    string status_msg = 2;
    repeated entity.Video video_list = 3;
}

message doutok_count_publish_request {
    repeated int64 user_id = 1;
}

message doutok_count_publish_response {
    int32 status_code = 1;
    string status_msg = 2;
    map<int64, int64> result = 3;
}

message doutok_get_video_info_request {
    int64 video_id = 1;
}

service VideoDomainService {
    rpc GetFeed(doutok_get_feed_request) returns (doutok_get_feed_response);
    rpc AddPublish(doutok_add_publish_request) returns (doutok_add_publish_response);
    rpc ListPublish(doutok_list_publish_request) returns (doutok_list_publish_response);
    rpc CountPublish(doutok_count_publish_request) returns (doutok_count_publish_response);
    rpc GetVideoInfo(doutok_get_video_info_request) returns (entity.Video);
}
